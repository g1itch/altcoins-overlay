diff --git a/desktop/pybitmessage.desktop b/desktop/pybitmessage.desktop
index 05970440..c30276e4 100644
--- a/desktop/pybitmessage.desktop
+++ b/desktop/pybitmessage.desktop
@@ -6,4 +6,4 @@ Comment=Send encrypted messages
 Exec=pybitmessage %F
 Icon=pybitmessage
 Terminal=false
-Categories=Office;Email;
+Categories=Office;Email;Network;
diff --git a/setup.py b/setup.py
index e3f97bac..4486cf57 100644
--- a/setup.py
+++ b/setup.py
@@ -22,7 +22,8 @@ EXTRAS_REQUIRE = {
         'curses',  # src/depends.py
         'python2-pythondialog',  # src/depends.py
         'm2r',  # fab build_docs
-    ]
+    ],
+    'xdg': ['pyxdg']
 }
 
 
@@ -147,6 +148,10 @@ if __name__ == "__main__":
                 'libmessaging ='
                 'pybitmessage.plugins.indicator_libmessaging [gir]'
             ],
+            'bitmessage.desktop': [
+                'freedesktop ='
+                'pybitmessage.plugins.desktop_xdg [xdg]'
+            ],
             # 'console_scripts': [
             #        'pybitmessage = pybitmessage.bitmessagemain:main'
             # ]
diff --git a/src/bitmessageqt/__init__.py b/src/bitmessageqt/__init__.py
index a645166f..cc2137b6 100644
--- a/src/bitmessageqt/__init__.py
+++ b/src/bitmessageqt/__init__.py
@@ -1346,12 +1346,21 @@ class MyForm(settingsmixin.SMainWindow):
     def sqlInit(self):
         register_adapter(QtCore.QByteArray, str)
 
-    # Try init the distro specific appindicator,
-    # for example the Ubuntu MessagingMenu
     def indicatorInit(self):
+        """
+        Try init the distro specific appindicator,
+        for example the Ubuntu MessagingMenu
+        """
         def _noop_update(*args, **kwargs):
             pass
 
+        # get desktop plugin if any
+        if 'win' not in sys.platform:
+            try:
+                self.desktop = get_plugin('desktop')()
+            except TypeError:
+                self.desktop = False
+
         try:
             self.indicatorUpdate = get_plugin('indicator')(self)
         except (NameError, TypeError):
@@ -2557,20 +2566,18 @@ class MyForm(settingsmixin.SMainWindow):
 
             BMConfigParser().save()
 
+            startonlogon = BMConfigParser().safeGetBoolean(
+                'bitmessagesettings', 'startonlogon')
             if 'win32' in sys.platform or 'win64' in sys.platform:
-            # Auto-startup for Windows
+                # Auto-startup for Windows
                 RUN_PATH = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"
                 self.settings = QtCore.QSettings(RUN_PATH, QtCore.QSettings.NativeFormat)
-                if BMConfigParser().getboolean('bitmessagesettings', 'startonlogon'):
+                if startonlogon:
                     self.settings.setValue("PyBitmessage", sys.argv[0])
                 else:
                     self.settings.remove("PyBitmessage")
-            elif 'darwin' in sys.platform:
-                # startup for mac
-                pass
-            elif 'linux' in sys.platform:
-                # startup for linux
-                pass
+            elif self.desktop:
+                self.desktop.adjust_startonlogon(startonlogon)
 
             if state.appdata != paths.lookupExeFolder() and self.settingsDialogInstance.ui.checkBoxPortableMode.isChecked():  # If we are NOT using portable mode now but the user selected that we should...
                 # Write the keys.dat file to disk in the new location
@@ -4247,19 +4254,18 @@ class settingsDialog(QtGui.QDialog):
                 self.ui.checkBoxPortableMode.setDisabled(True)
 
         if 'darwin' in sys.platform:
-            self.ui.checkBoxStartOnLogon.setDisabled(True)
-            self.ui.checkBoxStartOnLogon.setText(_translate(
-                "MainWindow", "Start-on-login not yet supported on your OS."))
             self.ui.checkBoxMinimizeToTray.setDisabled(True)
             self.ui.checkBoxMinimizeToTray.setText(_translate(
                 "MainWindow", "Minimize-to-tray not yet supported on your OS."))
             self.ui.checkBoxShowTrayNotifications.setDisabled(True)
             self.ui.checkBoxShowTrayNotifications.setText(_translate(
                 "MainWindow", "Tray notifications not yet supported on your OS."))
-        elif 'linux' in sys.platform:
+
+        if 'win' not in sys.platform and not self.parent.desktop:
             self.ui.checkBoxStartOnLogon.setDisabled(True)
             self.ui.checkBoxStartOnLogon.setText(_translate(
                 "MainWindow", "Start-on-login not yet supported on your OS."))
+
         # On the Network settings tab:
         self.ui.lineEditTCPPort.setText(str(
             BMConfigParser().get('bitmessagesettings', 'port')))
diff --git a/src/plugins/desktop_xdg.py b/src/plugins/desktop_xdg.py
new file mode 100644
index 00000000..c4e7d372
--- /dev/null
+++ b/src/plugins/desktop_xdg.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+
+import os
+
+from xdg import BaseDirectory, Menu
+
+
+class DesktopXDG(object):
+    def __init__(self):
+        menu_entry = Menu.parse().getMenu('Office').getMenuEntry(
+            'pybitmessage.desktop')
+        if menu_entry:
+            self.desktop = menu_entry.DesktopEntry
+
+    def adjust_startonlogon(self, autostart=False):
+        if not self.desktop:
+            return
+
+        autostart_path = os.path.join(
+            BaseDirectory.xdg_config_home, 'autostart', 'pybitmessage.desktop')
+        if autostart:
+            self.desktop.write(autostart_path)
+        else:
+            os.remove(autostart_path)
+
+
+connect_plugin = DesktopXDG
